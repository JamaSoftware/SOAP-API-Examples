
package com.jama;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ContourSoapService", targetNamespace = "http://v3.ws.contour.jamasoftware.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ContourSoapService {


    /**
     * 
     * @param organization
     * @param token
     * @return
     *     returns com.jama.WsOrganization
     */
    @WebMethod(action = "updateOrganization")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateOrganization", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateOrganization")
    @ResponseWrapper(localName = "updateOrganizationResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateOrganizationResponse")
    public WsOrganization updateOrganization(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "organization", targetNamespace = "")
        WsOrganization organization);

    /**
     * 
     * @param baselineId
     * @param token
     * @param comments
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "signBaseline")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "signBaseline", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.SignBaseline")
    @ResponseWrapper(localName = "signBaselineResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.SignBaselineResponse")
    public Boolean signBaseline(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "baselineId", targetNamespace = "")
        Long baselineId,
        @WebParam(name = "comments", targetNamespace = "")
        String comments);

    /**
     * 
     * @param project
     * @param token
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deleteProject")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteProject", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteProject")
    @ResponseWrapper(localName = "deleteProjectResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteProjectResponse")
    public Boolean deleteProject(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "project", targetNamespace = "")
        WsProject project);

    /**
     * 
     * @param token
     * @return
     *     returns com.jama.WsServerInfo
     */
    @WebMethod(action = "getServerInfo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getServerInfo", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetServerInfo")
    @ResponseWrapper(localName = "getServerInfoResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetServerInfoResponse")
    public WsServerInfo getServerInfo(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token);

    /**
     * 
     * @param token
     * @param attachmentDocId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deleteAttachment")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteAttachment", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteAttachment")
    @ResponseWrapper(localName = "deleteAttachmentResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteAttachmentResponse")
    public Boolean deleteAttachment(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "attachmentDocId", targetNamespace = "")
        Long attachmentDocId);

    /**
     * 
     * @param baselineName
     * @param token
     * @param description
     * @param filter
     * @return
     *     returns com.jama.WsBaseline
     */
    @WebMethod(action = "createBaselineFromFilter")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createBaselineFromFilter", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.CreateBaselineFromFilter")
    @ResponseWrapper(localName = "createBaselineFromFilterResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.CreateBaselineFromFilterResponse")
    public WsBaseline createBaselineFromFilter(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "baselineName", targetNamespace = "")
        String baselineName,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "filter", targetNamespace = "")
        WsFilter filter);

    /**
     * 
     * @param token
     * @param projectId
     * @return
     *     returns java.util.List<com.jama.WsFilter>
     */
    @WebMethod(action = "getFiltersForProject")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFiltersForProject", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetFiltersForProject")
    @ResponseWrapper(localName = "getFiltersForProjectResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetFiltersForProjectResponse")
    public List<WsFilter> getFiltersForProject(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "projectId", targetNamespace = "")
        Long projectId);

    /**
     * 
     * @param testRunId
     * @param token
     * @return
     *     returns com.jama.WsExecutableTestRun
     */
    @WebMethod(action = "getExecutableTestRun")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getExecutableTestRun", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetExecutableTestRun")
    @ResponseWrapper(localName = "getExecutableTestRunResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetExecutableTestRunResponse")
    public WsExecutableTestRun getExecutableTestRun(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "testRunId", targetNamespace = "")
        Integer testRunId);

    /**
     * 
     * @param testPlanId
     * @param token
     * @return
     *     returns java.util.List<com.jama.WsTestGroup>
     */
    @WebMethod(action = "getTestPlanGroups")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTestPlanGroups", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetTestPlanGroups")
    @ResponseWrapper(localName = "getTestPlanGroupsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetTestPlanGroupsResponse")
    public List<WsTestGroup> getTestPlanGroups(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "testPlanId", targetNamespace = "")
        Integer testPlanId);

    /**
     * 
     * @param token
     * @param lookup
     */
    @WebMethod(action = "addLookup")
    @RequestWrapper(localName = "addLookup", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddLookup")
    @ResponseWrapper(localName = "addLookupResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddLookupResponse")
    public void addLookup(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "lookup", targetNamespace = "")
        WsLookup lookup);

    /**
     * 
     * @param token
     * @param changeRequestAssociationId
     * @return
     *     returns com.jama.WsChangeRequestAssociation
     */
    @WebMethod(action = "getChangeRequestAssociation")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getChangeRequestAssociation", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetChangeRequestAssociation")
    @ResponseWrapper(localName = "getChangeRequestAssociationResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetChangeRequestAssociationResponse")
    public WsChangeRequestAssociation getChangeRequestAssociation(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "changeRequestAssociationId", targetNamespace = "")
        Long changeRequestAssociationId);

    /**
     * 
     * @param token
     * @param projectId
     * @return
     *     returns java.util.List<com.jama.WsAttachment>
     */
    @WebMethod(action = "getAttachments")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAttachments", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetAttachments")
    @ResponseWrapper(localName = "getAttachmentsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetAttachmentsResponse")
    public List<WsAttachment> getAttachments(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "projectId", targetNamespace = "")
        Long projectId);

    /**
     * 
     * @param token
     * @param attachmentDocId
     * @param itemId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "addAttachmentToItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addAttachmentToItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddAttachmentToItem")
    @ResponseWrapper(localName = "addAttachmentToItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddAttachmentToItemResponse")
    public Boolean addAttachmentToItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "attachmentDocId", targetNamespace = "")
        Long attachmentDocId,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.util.List<com.jama.WsRelationship>
     */
    @WebMethod(action = "getUpstreamRelationships")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUpstreamRelationships", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUpstreamRelationships")
    @ResponseWrapper(localName = "getUpstreamRelationshipsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUpstreamRelationshipsResponse")
    public List<WsRelationship> getUpstreamRelationships(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param token
     * @return
     *     returns java.util.List<com.jama.WsUser>
     */
    @WebMethod(action = "getUsers")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUsers", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUsersResponse")
    public List<WsUser> getUsers(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token);

    /**
     * 
     * @param token
     * @param filter
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod(action = "getNumItemsFromFilter")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNumItemsFromFilter", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetNumItemsFromFilter")
    @ResponseWrapper(localName = "getNumItemsFromFilterResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetNumItemsFromFilterResponse")
    public Integer getNumItemsFromFilter(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "filter", targetNamespace = "")
        WsFilter filter);

    /**
     * 
     * @param documentTypeId
     * @param token
     * @return
     *     returns java.util.List<com.jama.WsField>
     */
    @WebMethod(action = "getDocumentTypeFields")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDocumentTypeFields", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetDocumentTypeFields")
    @ResponseWrapper(localName = "getDocumentTypeFieldsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetDocumentTypeFieldsResponse")
    public List<WsField> getDocumentTypeFields(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "documentTypeId", targetNamespace = "")
        Long documentTypeId);

    /**
     * 
     * @param relationship
     * @param token
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deleteRelationship")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteRelationship", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteRelationship")
    @ResponseWrapper(localName = "deleteRelationshipResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteRelationshipResponse")
    public Boolean deleteRelationship(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "relationship", targetNamespace = "")
        WsRelationship relationship);

    /**
     * 
     * @param baselineId
     * @param token
     * @param revokeComments
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "revokeSignatureFromBaseline")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "revokeSignatureFromBaseline", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.RevokeSignatureFromBaseline")
    @ResponseWrapper(localName = "revokeSignatureFromBaselineResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.RevokeSignatureFromBaselineResponse")
    public Boolean revokeSignatureFromBaseline(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "baselineId", targetNamespace = "")
        Long baselineId,
        @WebParam(name = "revokeComments", targetNamespace = "")
        String revokeComments);

    /**
     * 
     * @param token
     * @param item
     * @return
     *     returns com.jama.WsItem
     */
    @WebMethod(action = "addItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddItem")
    @ResponseWrapper(localName = "addItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddItemResponse")
    public WsItem addItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "item", targetNamespace = "")
        WsItem item);

    /**
     * 
     * @param token
     * @param documentId
     * @return
     *     returns java.util.List<com.jama.WsWorkflowTransition>
     */
    @WebMethod(action = "getAvailableWorkflowTransitions")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvailableWorkflowTransitions", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetAvailableWorkflowTransitions")
    @ResponseWrapper(localName = "getAvailableWorkflowTransitionsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetAvailableWorkflowTransitionsResponse")
    public List<WsWorkflowTransition> getAvailableWorkflowTransitions(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "documentId", targetNamespace = "")
        Integer documentId);

    /**
     * 
     * @param organization
     * @param token
     */
    @WebMethod(action = "addOrganization")
    @RequestWrapper(localName = "addOrganization", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddOrganization")
    @ResponseWrapper(localName = "addOrganizationResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddOrganizationResponse")
    public void addOrganization(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "organization", targetNamespace = "")
        WsOrganization organization);

    /**
     * 
     * @param token
     * @param organizationId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deleteOrganization")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteOrganization", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteOrganization")
    @ResponseWrapper(localName = "deleteOrganizationResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteOrganizationResponse")
    public Boolean deleteOrganization(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "organizationId", targetNamespace = "")
        Long organizationId);

    /**
     * 
     * @param propertyEntry
     * @param token
     * @return
     *     returns com.jama.WsPropertyEntry
     */
    @WebMethod(action = "addPropertyEntry")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPropertyEntry", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddPropertyEntry")
    @ResponseWrapper(localName = "addPropertyEntryResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddPropertyEntryResponse")
    public WsPropertyEntry addPropertyEntry(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "propertyEntry", targetNamespace = "")
        WsPropertyEntry propertyEntry);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deactivateItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deactivateItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeactivateItem")
    @ResponseWrapper(localName = "deactivateItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeactivateItemResponse")
    public Boolean deactivateItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param token
     * @param attachmentDocId
     * @param itemId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "removeAttachmentFromItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeAttachmentFromItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.RemoveAttachmentFromItem")
    @ResponseWrapper(localName = "removeAttachmentFromItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.RemoveAttachmentFromItemResponse")
    public Boolean removeAttachmentFromItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "attachmentDocId", targetNamespace = "")
        Long attachmentDocId,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param items
     * @param token
     * @return
     *     returns java.util.List<com.jama.WsItem>
     */
    @WebMethod(action = "addItems")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addItems", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddItems")
    @ResponseWrapper(localName = "addItemsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddItemsResponse")
    public List<WsItem> addItems(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "items", targetNamespace = "")
        List<WsItem> items);

    /**
     * 
     * @param count
     * @param start
     * @param token
     * @param projectId
     * @return
     *     returns java.util.List<com.jama.WsActivity>
     */
    @WebMethod(action = "getActivities")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getActivities", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetActivities")
    @ResponseWrapper(localName = "getActivitiesResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetActivitiesResponse")
    public List<WsActivity> getActivities(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "projectId", targetNamespace = "")
        Long projectId,
        @WebParam(name = "start", targetNamespace = "")
        int start,
        @WebParam(name = "count", targetNamespace = "")
        int count);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.util.List<com.jama.WsUser>
     */
    @WebMethod(action = "getSubscribersToAnItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscribersToAnItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetSubscribersToAnItem")
    @ResponseWrapper(localName = "getSubscribersToAnItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetSubscribersToAnItemResponse")
    public List<WsUser> getSubscribersToAnItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param token
     * @param comment
     * @return
     *     returns com.jama.WsComment
     */
    @WebMethod(action = "updateComment")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateComment", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateComment")
    @ResponseWrapper(localName = "updateCommentResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateCommentResponse")
    public WsComment updateComment(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "comment", targetNamespace = "")
        WsComment comment);

    /**
     * 
     * @param count
     * @param searchTerms
     * @param start
     * @param token
     * @return
     *     returns java.util.List<com.jama.WsItem>
     */
    @WebMethod(action = "getItemsFromTextSearch")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemsFromTextSearch", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemsFromTextSearch")
    @ResponseWrapper(localName = "getItemsFromTextSearchResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemsFromTextSearchResponse")
    public List<WsItem> getItemsFromTextSearch(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "searchTerms", targetNamespace = "")
        String searchTerms,
        @WebParam(name = "start", targetNamespace = "")
        Integer start,
        @WebParam(name = "count", targetNamespace = "")
        Integer count);

    /**
     * 
     * @param releaseId
     * @param token
     * @return
     *     returns com.jama.WsRelease
     */
    @WebMethod(action = "getRelease")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRelease", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetRelease")
    @ResponseWrapper(localName = "getReleaseResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetReleaseResponse")
    public WsRelease getRelease(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "releaseId", targetNamespace = "")
        Long releaseId);

    /**
     * 
     * @param token
     * @return
     *     returns java.util.List<com.jama.WsOrganization>
     */
    @WebMethod(action = "getOrganizations")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOrganizations", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetOrganizations")
    @ResponseWrapper(localName = "getOrganizationsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetOrganizationsResponse")
    public List<WsOrganization> getOrganizations(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.util.List<com.jama.WsAttachment>
     */
    @WebMethod(action = "getAttachmentsForItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAttachmentsForItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetAttachmentsForItem")
    @ResponseWrapper(localName = "getAttachmentsForItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetAttachmentsForItemResponse")
    public List<WsAttachment> getAttachmentsForItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns com.jama.WsItem
     */
    @WebMethod(action = "getItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItem")
    @ResponseWrapper(localName = "getItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemResponse")
    public WsItem getItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.util.List<com.jama.WsVersion>
     */
    @WebMethod(action = "getVersionsForItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVersionsForItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetVersionsForItem")
    @ResponseWrapper(localName = "getVersionsForItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetVersionsForItemResponse")
    public List<WsVersion> getVersionsForItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param baselineId
     * @param token
     * @return
     *     returns com.jama.WsBaseline
     */
    @WebMethod(action = "getBaseline")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBaseline", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetBaseline")
    @ResponseWrapper(localName = "getBaselineResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetBaselineResponse")
    public WsBaseline getBaseline(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "baselineId", targetNamespace = "")
        Long baselineId);

    /**
     * 
     * @param token
     * @param changeRequestItemId
     * @return
     *     returns java.util.List<com.jama.WsChangeRequestAssociation>
     */
    @WebMethod(action = "getChangeRequestAssociations")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getChangeRequestAssociations", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetChangeRequestAssociations")
    @ResponseWrapper(localName = "getChangeRequestAssociationsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetChangeRequestAssociationsResponse")
    public List<WsChangeRequestAssociation> getChangeRequestAssociations(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "changeRequestItemId", targetNamespace = "")
        Integer changeRequestItemId);

    /**
     * 
     * @param token
     * @return
     *     returns java.util.List<com.jama.WsProject>
     */
    @WebMethod(action = "getProjects")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProjects", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetProjects")
    @ResponseWrapper(localName = "getProjectsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetProjectsResponse")
    public List<WsProject> getProjects(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token);

    /**
     * 
     * @param project
     * @param token
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deactivateProject")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deactivateProject", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeactivateProject")
    @ResponseWrapper(localName = "deactivateProjectResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeactivateProjectResponse")
    public Boolean deactivateProject(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "project", targetNamespace = "")
        WsProject project);

    /**
     * 
     * @param items
     * @param token
     * @return
     *     returns java.util.List<com.jama.WsItem>
     */
    @WebMethod(action = "updateItems")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateItems", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateItems")
    @ResponseWrapper(localName = "updateItemsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateItemsResponse")
    public List<WsItem> updateItems(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "items", targetNamespace = "")
        List<WsItem> items);

    /**
     * 
     * @param token
     * @param propertylist
     * @return
     *     returns com.jama.WsPropertyList
     */
    @WebMethod(action = "addPropertyList")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPropertyList", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddPropertyList")
    @ResponseWrapper(localName = "addPropertyListResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddPropertyListResponse")
    public WsPropertyList addPropertyList(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "propertylist", targetNamespace = "")
        WsPropertyList propertylist);

    /**
     * 
     * @param propertyEntry
     * @param token
     * @return
     *     returns com.jama.WsPropertyEntry
     */
    @WebMethod(action = "updatePropertyEntry")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updatePropertyEntry", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdatePropertyEntry")
    @ResponseWrapper(localName = "updatePropertyEntryResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdatePropertyEntryResponse")
    public WsPropertyEntry updatePropertyEntry(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "propertyEntry", targetNamespace = "")
        WsPropertyEntry propertyEntry);

    /**
     * 
     * @param propertyName
     * @param scope
     * @param token
     * @param refId
     * @return
     *     returns com.jama.WsPropertyEntry
     */
    @WebMethod(action = "getPropertyEntry")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPropertyEntry", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetPropertyEntry")
    @ResponseWrapper(localName = "getPropertyEntryResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetPropertyEntryResponse")
    public WsPropertyEntry getPropertyEntry(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "refId", targetNamespace = "")
        Integer refId,
        @WebParam(name = "scope", targetNamespace = "")
        Integer scope,
        @WebParam(name = "propertyName", targetNamespace = "")
        String propertyName);

    /**
     * 
     * @param parentId
     * @param documentTypeId
     * @param token
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "isValidDocumentPlacement")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isValidDocumentPlacement", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.IsValidDocumentPlacement")
    @ResponseWrapper(localName = "isValidDocumentPlacementResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.IsValidDocumentPlacementResponse")
    public Boolean isValidDocumentPlacement(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "documentTypeId", targetNamespace = "")
        Long documentTypeId,
        @WebParam(name = "parentId", targetNamespace = "")
        Long parentId);

    /**
     * 
     * @param token
     * @param projectId
     * @return
     *     returns java.util.List<com.jama.WsRelationship>
     */
    @WebMethod(action = "getRelationshipsForProject")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRelationshipsForProject", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetRelationshipsForProject")
    @ResponseWrapper(localName = "getRelationshipsForProjectResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetRelationshipsForProjectResponse")
    public List<WsRelationship> getRelationshipsForProject(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "projectId", targetNamespace = "")
        Long projectId);

    /**
     * 
     * @param token
     * @param comment
     * @return
     *     returns com.jama.WsComment
     */
    @WebMethod(action = "addComment")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addComment", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddComment")
    @ResponseWrapper(localName = "addCommentResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddCommentResponse")
    public WsComment addComment(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "comment", targetNamespace = "")
        WsComment comment);

    /**
     * 
     * @param token
     * @param lookup
     * @return
     *     returns com.jama.WsLookup
     */
    @WebMethod(action = "updateLookup")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateLookup", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateLookup")
    @ResponseWrapper(localName = "updateLookupResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateLookupResponse")
    public WsLookup updateLookup(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "lookup", targetNamespace = "")
        WsLookup lookup);

    /**
     * 
     * @param token
     * @param projectId
     * @return
     *     returns java.util.List<com.jama.WsBaseline>
     */
    @WebMethod(action = "getBaselinesForProject")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBaselinesForProject", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetBaselinesForProject")
    @ResponseWrapper(localName = "getBaselinesForProjectResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetBaselinesForProjectResponse")
    public List<WsBaseline> getBaselinesForProject(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "projectId", targetNamespace = "")
        Long projectId);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.util.List<com.jama.WsField>
     */
    @WebMethod(action = "getItemFields")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemFields", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemFields")
    @ResponseWrapper(localName = "getItemFieldsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemFieldsResponse")
    public List<WsField> getItemFields(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param token
     * @param attachmentDocId
     * @return
     *     returns com.jama.WsAttachment
     */
    @WebMethod(action = "getAttachment")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAttachment", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetAttachment")
    @ResponseWrapper(localName = "getAttachmentResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetAttachmentResponse")
    public WsAttachment getAttachment(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "attachmentDocId", targetNamespace = "")
        Long attachmentDocId);

    /**
     * 
     * @param changeRequestAssociation
     * @param token
     * @return
     *     returns com.jama.WsChangeRequestAssociation
     */
    @WebMethod(action = "updateChangeRequestAssociation")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateChangeRequestAssociation", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateChangeRequestAssociation")
    @ResponseWrapper(localName = "updateChangeRequestAssociationResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateChangeRequestAssociationResponse")
    public WsChangeRequestAssociation updateChangeRequestAssociation(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "changeRequestAssociation", targetNamespace = "")
        WsChangeRequestAssociation changeRequestAssociation);

    /**
     * 
     * @param token
     * @param attachmentDocId
     * @return
     *     returns java.util.List<com.jama.WsItem>
     */
    @WebMethod(action = "getItemsWithAttachment")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemsWithAttachment", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemsWithAttachment")
    @ResponseWrapper(localName = "getItemsWithAttachmentResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemsWithAttachmentResponse")
    public List<WsItem> getItemsWithAttachment(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "attachmentDocId", targetNamespace = "")
        Long attachmentDocId);

    /**
     * 
     * @param project
     * @param token
     * @return
     *     returns com.jama.WsProject
     * @throws WsException_Exception
     */
    @WebMethod(action = "addProject")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addProject", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddProject")
    @ResponseWrapper(localName = "addProjectResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddProjectResponse")
    public WsProject addProject(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "project", targetNamespace = "")
        WsProject project)
        throws WsException_Exception
    ;

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "clearSuspectLinksForItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "clearSuspectLinksForItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.ClearSuspectLinksForItem")
    @ResponseWrapper(localName = "clearSuspectLinksForItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.ClearSuspectLinksForItemResponse")
    public Boolean clearSuspectLinksForItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param relationship
     * @param token
     * @return
     *     returns com.jama.WsRelationship
     */
    @WebMethod(action = "updateRelationship")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateRelationship", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateRelationship")
    @ResponseWrapper(localName = "updateRelationshipResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateRelationshipResponse")
    public WsRelationship updateRelationship(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "relationship", targetNamespace = "")
        WsRelationship relationship);

    /**
     * 
     * @param token
     * @param organizationId
     * @return
     *     returns com.jama.WsOrganization
     */
    @WebMethod(action = "getOrganization")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOrganization", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetOrganization")
    @ResponseWrapper(localName = "getOrganizationResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetOrganizationResponse")
    public WsOrganization getOrganization(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "organizationId", targetNamespace = "")
        Long organizationId);

    /**
     * 
     * @param token
     * @param attachmentDocId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "getUrlForAttachment")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUrlForAttachment", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUrlForAttachment")
    @ResponseWrapper(localName = "getUrlForAttachmentResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUrlForAttachmentResponse")
    public String getUrlForAttachment(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "attachmentDocId", targetNamespace = "")
        Long attachmentDocId);

    /**
     * 
     * @param scope
     * @param token
     * @param refId
     * @return
     *     returns com.jama.WsPropertyList
     */
    @WebMethod(action = "getPropertyList")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPropertyList", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetPropertyList")
    @ResponseWrapper(localName = "getPropertyListResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetPropertyListResponse")
    public WsPropertyList getPropertyList(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "refId", targetNamespace = "")
        Integer refId,
        @WebParam(name = "scope", targetNamespace = "")
        Integer scope);

    /**
     * 
     * @param token
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "testConnection")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "testConnection", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.TestConnection")
    @ResponseWrapper(localName = "testConnectionResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.TestConnectionResponse")
    public Boolean testConnection(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token);

    /**
     * 
     * @param token
     * @return
     *     returns com.jama.WsUser
     */
    @WebMethod(action = "getUserFromAuth")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserFromAuth", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUserFromAuth")
    @ResponseWrapper(localName = "getUserFromAuthResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUserFromAuthResponse")
    public WsUser getUserFromAuth(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token);

    /**
     * 
     * @param token
     * @param notifyUsers
     * @param itemId
     * @param comments
     * @param fields
     * @return
     *     returns com.jama.WsItem
     */
    @WebMethod(action = "updateItemValues")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateItemValues", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateItemValues")
    @ResponseWrapper(localName = "updateItemValuesResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateItemValuesResponse")
    public WsItem updateItemValues(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId,
        @WebParam(name = "fields", targetNamespace = "")
        List<WsField> fields,
        @WebParam(name = "comments", targetNamespace = "")
        String comments,
        @WebParam(name = "notifyUsers", targetNamespace = "")
        List<WsUser> notifyUsers);

    /**
     * 
     * @param token
     * @param projectId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "clearSuspectLinksForProject")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "clearSuspectLinksForProject", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.ClearSuspectLinksForProject")
    @ResponseWrapper(localName = "clearSuspectLinksForProjectResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.ClearSuspectLinksForProjectResponse")
    public Boolean clearSuspectLinksForProject(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "projectId", targetNamespace = "")
        Long projectId);

    /**
     * 
     * @param token
     * @param item
     * @return
     *     returns com.jama.WsItem
     */
    @WebMethod(action = "updateItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateItem")
    @ResponseWrapper(localName = "updateItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateItemResponse")
    public WsItem updateItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "item", targetNamespace = "")
        WsItem item);

    /**
     * 
     * @param token
     * @param versionId
     * @return
     *     returns com.jama.WsVersion
     */
    @WebMethod(action = "getVersion")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVersion", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetVersion")
    @ResponseWrapper(localName = "getVersionResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetVersionResponse")
    public WsVersion getVersion(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "versionId", targetNamespace = "")
        Long versionId);

    /**
     * 
     * @param listOfRelationships
     * @param token
     * @return
     *     returns java.util.List<com.jama.WsRelationship>
     */
    @WebMethod(action = "createRelationships")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createRelationships", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.CreateRelationships")
    @ResponseWrapper(localName = "createRelationshipsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.CreateRelationshipsResponse")
    public List<WsRelationship> createRelationships(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "listOfRelationships", targetNamespace = "")
        List<WsRelationship> listOfRelationships);

    /**
     * 
     * @param token
     * @param baseline
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deactivateBaseline")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deactivateBaseline", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeactivateBaseline")
    @ResponseWrapper(localName = "deactivateBaselineResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeactivateBaselineResponse")
    public Boolean deactivateBaseline(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "baseline", targetNamespace = "")
        WsBaseline baseline);

    /**
     * 
     * @param token
     * @param lookupTypeId
     * @return
     *     returns java.util.List<com.jama.WsLookup>
     */
    @WebMethod(action = "getLookupsFromType")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLookupsFromType", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetLookupsFromType")
    @ResponseWrapper(localName = "getLookupsFromTypeResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetLookupsFromTypeResponse")
    public List<WsLookup> getLookupsFromType(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "lookupTypeId", targetNamespace = "")
        Integer lookupTypeId);

    /**
     * 
     * @param token
     * @param projectId
     * @param release
     * @return
     *     returns com.jama.WsRelease
     */
    @WebMethod(action = "addRelease")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addRelease", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddRelease")
    @ResponseWrapper(localName = "addReleaseResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddReleaseResponse")
    public WsRelease addRelease(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "projectId", targetNamespace = "")
        Integer projectId,
        @WebParam(name = "release", targetNamespace = "")
        WsRelease release);

    /**
     * 
     * @param documentTypeId
     * @param token
     * @return
     *     returns com.jama.WsDocumentType
     */
    @WebMethod(action = "getDocumentType")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDocumentType", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetDocumentType")
    @ResponseWrapper(localName = "getDocumentTypeResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetDocumentTypeResponse")
    public WsDocumentType getDocumentType(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "documentTypeId", targetNamespace = "")
        Long documentTypeId);

    /**
     * 
     * @param token
     * @param user
     * @return
     *     returns com.jama.WsUser
     */
    @WebMethod(action = "updateUser")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateUser", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateUser")
    @ResponseWrapper(localName = "updateUserResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateUserResponse")
    public WsUser updateUser(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "user", targetNamespace = "")
        WsUser user);

    /**
     * 
     * @param token
     * @param propertylist
     * @return
     *     returns com.jama.WsPropertyList
     */
    @WebMethod(action = "updatePropertyList")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updatePropertyList", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdatePropertyList")
    @ResponseWrapper(localName = "updatePropertyListResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdatePropertyListResponse")
    public WsPropertyList updatePropertyList(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "propertylist", targetNamespace = "")
        WsPropertyList propertylist);

    /**
     * 
     * @param changeRequestAssociation
     * @param token
     * @return
     *     returns com.jama.WsChangeRequestAssociation
     */
    @WebMethod(action = "addChangeRequestAssociation")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addChangeRequestAssociation", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddChangeRequestAssociation")
    @ResponseWrapper(localName = "addChangeRequestAssociationResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddChangeRequestAssociationResponse")
    public WsChangeRequestAssociation addChangeRequestAssociation(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "changeRequestAssociation", targetNamespace = "")
        WsChangeRequestAssociation changeRequestAssociation);

    /**
     * 
     * @param token
     * @param projectId
     * @return
     *     returns java.util.List<com.jama.WsDocumentType>
     */
    @WebMethod(action = "getDocumentTypesForProject")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDocumentTypesForProject", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetDocumentTypesForProject")
    @ResponseWrapper(localName = "getDocumentTypesForProjectResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetDocumentTypesForProjectResponse")
    public List<WsDocumentType> getDocumentTypesForProject(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "projectId", targetNamespace = "")
        Long projectId);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "getUrlForItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUrlForItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUrlForItem")
    @ResponseWrapper(localName = "getUrlForItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUrlForItemResponse")
    public String getUrlForItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "isChangeRequest")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isChangeRequest", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.IsChangeRequest")
    @ResponseWrapper(localName = "isChangeRequestResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.IsChangeRequestResponse")
    public Boolean isChangeRequest(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Integer itemId);

    /**
     * 
     * @param changeRequestAssociation
     * @param token
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deleteChangeRequestAssociation")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteChangeRequestAssociation", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteChangeRequestAssociation")
    @ResponseWrapper(localName = "deleteChangeRequestAssociationResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteChangeRequestAssociationResponse")
    public Boolean deleteChangeRequestAssociation(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "changeRequestAssociation", targetNamespace = "")
        WsChangeRequestAssociation changeRequestAssociation);

    /**
     * 
     * @param token
     * @param propertylist
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deletePropertyList")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePropertyList", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeletePropertyList")
    @ResponseWrapper(localName = "deletePropertyListResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeletePropertyListResponse")
    public Boolean deletePropertyList(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "propertylist", targetNamespace = "")
        WsPropertyList propertylist);

    /**
     * 
     * @param count
     * @param documentTypeId
     * @param start
     * @param token
     * @param projectId
     * @return
     *     returns java.util.List<com.jama.WsItem>
     */
    @WebMethod(action = "getItemsForProjectAndDocumentType")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemsForProjectAndDocumentType", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemsForProjectAndDocumentType")
    @ResponseWrapper(localName = "getItemsForProjectAndDocumentTypeResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemsForProjectAndDocumentTypeResponse")
    public List<WsItem> getItemsForProjectAndDocumentType(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "projectId", targetNamespace = "")
        Long projectId,
        @WebParam(name = "documentTypeId", targetNamespace = "")
        Long documentTypeId,
        @WebParam(name = "start", targetNamespace = "")
        int start,
        @WebParam(name = "count", targetNamespace = "")
        int count);

    /**
     * 
     * @param token
     * @param release
     * @return
     *     returns com.jama.WsRelease
     */
    @WebMethod(action = "updateRelease")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateRelease", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateRelease")
    @ResponseWrapper(localName = "updateReleaseResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateReleaseResponse")
    public WsRelease updateRelease(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "release", targetNamespace = "")
        WsRelease release);

    /**
     * 
     * @param token
     * @param commentId
     * @return
     *     returns com.jama.WsComment
     */
    @WebMethod(action = "getComment")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getComment", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetComment")
    @ResponseWrapper(localName = "getCommentResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetCommentResponse")
    public WsComment getComment(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "commentId", targetNamespace = "")
        Long commentId);

    /**
     * 
     * @param project
     * @param token
     * @return
     *     returns com.jama.WsProject
     * @throws WsException_Exception
     */
    @WebMethod(action = "updateProject")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateProject", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateProject")
    @ResponseWrapper(localName = "updateProjectResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateProjectResponse")
    public WsProject updateProject(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "project", targetNamespace = "")
        WsProject project)
        throws WsException_Exception
    ;

    /**
     * 
     * @param newParentId
     * @param token
     * @param itemId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "moveDocument")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "moveDocument", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.MoveDocument")
    @ResponseWrapper(localName = "moveDocumentResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.MoveDocumentResponse")
    public Boolean moveDocument(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId,
        @WebParam(name = "newParentId", targetNamespace = "")
        Long newParentId);

    /**
     * 
     * @param filterId
     * @param token
     * @return
     *     returns com.jama.WsFilter
     */
    @WebMethod(action = "getFilter")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFilter", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetFilter")
    @ResponseWrapper(localName = "getFilterResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetFilterResponse")
    public WsFilter getFilter(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "filterId", targetNamespace = "")
        Long filterId);

    /**
     * 
     * @param token
     * @param userId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deactivateUser")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deactivateUser", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeactivateUser")
    @ResponseWrapper(localName = "deactivateUserResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeactivateUserResponse")
    public Boolean deactivateUser(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "userId", targetNamespace = "")
        Long userId);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.util.List<com.jama.WsComment>
     */
    @WebMethod(action = "getComments")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getComments", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetComments")
    @ResponseWrapper(localName = "getCommentsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetCommentsResponse")
    public List<WsComment> getComments(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param token
     * @param downstream
     * @param filter
     * @return
     *     returns java.util.List<com.jama.WsRelationship>
     */
    @WebMethod(action = "getRelationshipsFromFilter")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRelationshipsFromFilter", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetRelationshipsFromFilter")
    @ResponseWrapper(localName = "getRelationshipsFromFilterResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetRelationshipsFromFilterResponse")
    public List<WsRelationship> getRelationshipsFromFilter(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "filter", targetNamespace = "")
        WsFilter filter,
        @WebParam(name = "downstream", targetNamespace = "")
        Boolean downstream);

    /**
     * 
     * @param token
     * @param organizationId
     * @return
     *     returns java.util.List<com.jama.WsDocumentType>
     */
    @WebMethod(action = "getDocumentTypes")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDocumentTypes", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetDocumentTypes")
    @ResponseWrapper(localName = "getDocumentTypesResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetDocumentTypesResponse")
    public List<WsDocumentType> getDocumentTypes(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "organizationId", targetNamespace = "")
        Long organizationId);

    /**
     * 
     * @param token
     * @param userId
     * @return
     *     returns com.jama.WsUser
     */
    @WebMethod(action = "getUser")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUser", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUserResponse")
    public WsUser getUser(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "userId", targetNamespace = "")
        Integer userId);

    /**
     * 
     * @param count
     * @param start
     * @param token
     * @param projectId
     * @return
     *     returns java.util.List<com.jama.WsItem>
     */
    @WebMethod(action = "getItemsForProject")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemsForProject", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemsForProject")
    @ResponseWrapper(localName = "getItemsForProjectResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemsForProjectResponse")
    public List<WsItem> getItemsForProject(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "projectId", targetNamespace = "")
        Long projectId,
        @WebParam(name = "start", targetNamespace = "")
        int start,
        @WebParam(name = "count", targetNamespace = "")
        int count);

    /**
     * 
     * @param relationshipId
     * @param token
     * @return
     *     returns com.jama.WsRelationship
     */
    @WebMethod(action = "getRelationship")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRelationship", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetRelationship")
    @ResponseWrapper(localName = "getRelationshipResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetRelationshipResponse")
    public WsRelationship getRelationship(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "relationshipId", targetNamespace = "")
        Long relationshipId);

    /**
     * 
     * @param token
     * @param lookupTypeId
     * @return
     *     returns com.jama.WsLookupType
     */
    @WebMethod(action = "getLookupType")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLookupType", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetLookupType")
    @ResponseWrapper(localName = "getLookupTypeResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetLookupTypeResponse")
    public WsLookupType getLookupType(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "lookupTypeId", targetNamespace = "")
        Integer lookupTypeId);

    /**
     * 
     * @param baselineId
     * @param newDescription
     * @param token
     * @param newName
     * @return
     *     returns com.jama.WsBaseline
     */
    @WebMethod(action = "updateBaseline")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateBaseline", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateBaseline")
    @ResponseWrapper(localName = "updateBaselineResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.UpdateBaselineResponse")
    public WsBaseline updateBaseline(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "baselineId", targetNamespace = "")
        Long baselineId,
        @WebParam(name = "newName", targetNamespace = "")
        String newName,
        @WebParam(name = "newDescription", targetNamespace = "")
        String newDescription);

    /**
     * 
     * @param startDate
     * @param cycleName
     * @param testPlanId
     * @param token
     * @param cycleDescription
     * @param testGroupsToInclude
     * @param endDate
     * @param statusesToInclude
     * @return
     *     returns com.jama.WsItem
     */
    @WebMethod(action = "createNewTestCycle")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewTestCycle", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.CreateNewTestCycle")
    @ResponseWrapper(localName = "createNewTestCycleResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.CreateNewTestCycleResponse")
    public WsItem createNewTestCycle(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "testPlanId", targetNamespace = "")
        Integer testPlanId,
        @WebParam(name = "cycleName", targetNamespace = "")
        String cycleName,
        @WebParam(name = "cycleDescription", targetNamespace = "")
        String cycleDescription,
        @WebParam(name = "startDate", targetNamespace = "")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "")
        XMLGregorianCalendar endDate,
        @WebParam(name = "statusesToInclude", targetNamespace = "")
        List<WsTestRunStatus> statusesToInclude,
        @WebParam(name = "testGroupsToInclude", targetNamespace = "")
        List<WsTestGroup> testGroupsToInclude);

    /**
     * 
     * @param count
     * @param start
     * @param token
     * @param recursive
     * @param itemId
     * @return
     *     returns java.util.List<com.jama.WsItem>
     */
    @WebMethod(action = "getChildrenOfItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getChildrenOfItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetChildrenOfItem")
    @ResponseWrapper(localName = "getChildrenOfItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetChildrenOfItemResponse")
    public List<WsItem> getChildrenOfItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId,
        @WebParam(name = "recursive", targetNamespace = "")
        Boolean recursive,
        @WebParam(name = "start", targetNamespace = "")
        int start,
        @WebParam(name = "count", targetNamespace = "")
        int count);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.util.List<com.jama.WsItem>
     */
    @WebMethod(action = "getDownstreamRelated")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDownstreamRelated", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetDownstreamRelated")
    @ResponseWrapper(localName = "getDownstreamRelatedResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetDownstreamRelatedResponse")
    public List<WsItem> getDownstreamRelated(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param token
     * @param commentId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deleteComment")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteComment", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteComment")
    @ResponseWrapper(localName = "deleteCommentResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteCommentResponse")
    public Boolean deleteComment(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "commentId", targetNamespace = "")
        Long commentId);

    /**
     * 
     * @param token
     * @param user
     */
    @WebMethod(action = "addUser")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddUserResponse")
    public void addUser(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "user", targetNamespace = "")
        WsUser user);

    /**
     * 
     * @param token
     * @param baseline
     * @return
     *     returns com.jama.WsBaseline
     */
    @WebMethod(action = "createBaseline")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createBaseline", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.CreateBaseline")
    @ResponseWrapper(localName = "createBaselineResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.CreateBaselineResponse")
    public WsBaseline createBaseline(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "baseline", targetNamespace = "")
        WsBaseline baseline);

    /**
     * 
     * @param token
     * @param projectId
     * @return
     *     returns com.jama.WsProject
     */
    @WebMethod(action = "getProject")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProject", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetProject")
    @ResponseWrapper(localName = "getProjectResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetProjectResponse")
    public WsProject getProject(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "projectId", targetNamespace = "")
        Integer projectId);

    /**
     * 
     * @param token
     * @param changeRequestItemId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "closeChangeRequest")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "closeChangeRequest", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.CloseChangeRequest")
    @ResponseWrapper(localName = "closeChangeRequestResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.CloseChangeRequestResponse")
    public Boolean closeChangeRequest(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "changeRequestItemId", targetNamespace = "")
        Integer changeRequestItemId);

    /**
     * 
     * @param token
     * @param transition
     * @param documentId
     */
    @WebMethod(action = "executeWorkflowTransition")
    @RequestWrapper(localName = "executeWorkflowTransition", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.ExecuteWorkflowTransition")
    @ResponseWrapper(localName = "executeWorkflowTransitionResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.ExecuteWorkflowTransitionResponse")
    public void executeWorkflowTransition(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "documentId", targetNamespace = "")
        Integer documentId,
        @WebParam(name = "transition", targetNamespace = "")
        WsWorkflowTransition transition);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns com.jama.WsVersion
     */
    @WebMethod(action = "getCurrentVersionForItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCurrentVersionForItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetCurrentVersionForItem")
    @ResponseWrapper(localName = "getCurrentVersionForItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetCurrentVersionForItemResponse")
    public WsVersion getCurrentVersionForItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(action = "getItemFieldNames")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemFieldNames", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemFieldNames")
    @ResponseWrapper(localName = "getItemFieldNamesResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemFieldNamesResponse")
    public List<String> getItemFieldNames(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param propertyEntry
     * @param token
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deletePropertyEntry")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePropertyEntry", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeletePropertyEntry")
    @ResponseWrapper(localName = "deletePropertyEntryResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeletePropertyEntryResponse")
    public Boolean deletePropertyEntry(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "propertyEntry", targetNamespace = "")
        WsPropertyEntry propertyEntry);

    /**
     * 
     * @param commentToReplyTo
     * @param commentText
     * @param token
     * @return
     *     returns com.jama.WsComment
     */
    @WebMethod(action = "replyToComment")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "replyToComment", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.ReplyToComment")
    @ResponseWrapper(localName = "replyToCommentResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.ReplyToCommentResponse")
    public WsComment replyToComment(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "commentText", targetNamespace = "")
        String commentText,
        @WebParam(name = "commentToReplyTo", targetNamespace = "")
        long commentToReplyTo);

    /**
     * 
     * @param releaseId
     * @param token
     * @param swapReleaseId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deleteRelease")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteRelease", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteRelease")
    @ResponseWrapper(localName = "deleteReleaseResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeleteReleaseResponse")
    public Boolean deleteRelease(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "releaseId", targetNamespace = "")
        Long releaseId,
        @WebParam(name = "swapReleaseId", targetNamespace = "")
        Long swapReleaseId);

    /**
     * 
     * @param replacementLookup
     * @param lookuptoDeactivate
     * @param token
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "deactivateLookup")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deactivateLookup", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeactivateLookup")
    @ResponseWrapper(localName = "deactivateLookupResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.DeactivateLookupResponse")
    public Boolean deactivateLookup(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "lookuptoDeactivate", targetNamespace = "")
        WsLookup lookuptoDeactivate,
        @WebParam(name = "replacementLookup", targetNamespace = "")
        WsLookup replacementLookup);

    /**
     * 
     * @param baselineId
     * @param count
     * @param start
     * @param token
     * @return
     *     returns java.util.List<com.jama.WsItem>
     */
    @WebMethod(action = "getItemsForBaseline")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemsForBaseline", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemsForBaseline")
    @ResponseWrapper(localName = "getItemsForBaselineResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemsForBaselineResponse")
    public List<WsItem> getItemsForBaseline(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "baselineId", targetNamespace = "")
        Long baselineId,
        @WebParam(name = "start", targetNamespace = "")
        Integer start,
        @WebParam(name = "count", targetNamespace = "")
        Integer count);

    /**
     * 
     * @param project
     * @param token
     * @return
     *     returns java.util.List<com.jama.WsRelease>
     */
    @WebMethod(action = "getReleases")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReleases", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetReleases")
    @ResponseWrapper(localName = "getReleasesResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetReleasesResponse")
    public List<WsRelease> getReleases(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "project", targetNamespace = "")
        WsProject project);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.util.List<com.jama.WsItem>
     */
    @WebMethod(action = "getUpstreamRelated")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUpstreamRelated", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUpstreamRelated")
    @ResponseWrapper(localName = "getUpstreamRelatedResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetUpstreamRelatedResponse")
    public List<WsItem> getUpstreamRelated(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param scope
     * @param token
     * @param refId
     * @return
     *     returns com.jama.WsPermissions
     */
    @WebMethod(action = "getPermissionsByRefAndScope")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPermissionsByRefAndScope", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetPermissionsByRefAndScope")
    @ResponseWrapper(localName = "getPermissionsByRefAndScopeResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetPermissionsByRefAndScopeResponse")
    public WsPermissions getPermissionsByRefAndScope(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "refId", targetNamespace = "")
        Integer refId,
        @WebParam(name = "scope", targetNamespace = "")
        Integer scope);

    /**
     * 
     * @param token
     * @param organizationId
     * @return
     *     returns java.util.List<com.jama.WsRelationshipType>
     */
    @WebMethod(action = "getRelationshipTypeList")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRelationshipTypeList", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetRelationshipTypeList")
    @ResponseWrapper(localName = "getRelationshipTypeListResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetRelationshipTypeListResponse")
    public List<WsRelationshipType> getRelationshipTypeList(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "organizationId", targetNamespace = "")
        Long organizationId);

    /**
     * 
     * @param actualResults
     * @param testRunId
     * @param token
     * @param durationInMinutes
     * @param passedWithErrors
     * @param steps
     * @return
     *     returns com.jama.WsTestRunStatus
     */
    @WebMethod(action = "executeTestRun")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeTestRun", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.ExecuteTestRun")
    @ResponseWrapper(localName = "executeTestRunResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.ExecuteTestRunResponse")
    public WsTestRunStatus executeTestRun(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "testRunId", targetNamespace = "")
        Integer testRunId,
        @WebParam(name = "durationInMinutes", targetNamespace = "")
        Integer durationInMinutes,
        @WebParam(name = "actualResults", targetNamespace = "")
        String actualResults,
        @WebParam(name = "passedWithErrors", targetNamespace = "")
        Boolean passedWithErrors,
        @WebParam(name = "steps", targetNamespace = "")
        List<WsTestRunStep> steps);

    /**
     * 
     * @param lookupId
     * @param token
     * @return
     *     returns com.jama.WsLookup
     */
    @WebMethod(action = "getLookup")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLookup", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetLookup")
    @ResponseWrapper(localName = "getLookupResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetLookupResponse")
    public WsLookup getLookup(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "lookupId", targetNamespace = "")
        Integer lookupId);

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns java.util.List<com.jama.WsRelationship>
     */
    @WebMethod(action = "getDownstreamRelationships")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDownstreamRelationships", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetDownstreamRelationships")
    @ResponseWrapper(localName = "getDownstreamRelationshipsResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetDownstreamRelationshipsResponse")
    public List<WsRelationship> getDownstreamRelationships(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId);

    /**
     * 
     * @param count
     * @param start
     * @param token
     * @param filter
     * @return
     *     returns java.util.List<com.jama.WsItem>
     */
    @WebMethod(action = "getItemsFromFilter")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemsFromFilter", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemsFromFilter")
    @ResponseWrapper(localName = "getItemsFromFilterResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetItemsFromFilterResponse")
    public List<WsItem> getItemsFromFilter(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "filter", targetNamespace = "")
        WsFilter filter,
        @WebParam(name = "start", targetNamespace = "")
        Integer start,
        @WebParam(name = "count", targetNamespace = "")
        Integer count);

    /**
     * 
     * @param searchTerms
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod(action = "getNumItemsFromTextSearch")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNumItemsFromTextSearch", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetNumItemsFromTextSearch")
    @ResponseWrapper(localName = "getNumItemsFromTextSearchResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.GetNumItemsFromTextSearchResponse")
    public Integer getNumItemsFromTextSearch(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "searchTerms", targetNamespace = "")
        String searchTerms);

    /**
     * 
     * @param users
     * @param token
     * @param itemId
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(action = "addSubscribersToItem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addSubscribersToItem", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddSubscribersToItem")
    @ResponseWrapper(localName = "addSubscribersToItemResponse", targetNamespace = "http://v3.ws.contour.jamasoftware.com/", className = "com.jama.AddSubscribersToItemResponse")
    public Boolean addSubscribersToItem(
        @WebParam(name = "token", targetNamespace = "")
        WsAuth token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId,
        @WebParam(name = "users", targetNamespace = "")
        List<WsUser> users);

}
